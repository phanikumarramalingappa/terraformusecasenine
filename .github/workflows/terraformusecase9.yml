name: EKS deployment python app

on:
  workflow_dispatch:
  # push:
  #   paths:
  #     - 'usecase-9/**'
  #     - '.github/workflows/deploy_uc5.yml'
  #   branches: [main]

env:
  AWS_REGION: us-east-1
  EKS_REPO: 911891700576.dkr.ecr.us-east-1.amazonaws.com/kubernetes-uc-9:cicd

permissions:
  id-token: write
  contents: write

jobs:
  terraform-usecase-9:
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.2.2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3

      - name: SetUp AWS
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Run implement terraform
        run: |
          terraform init
          terraform fmt -recursive
          terraform validate
          terraform plan -var-file=terraform.tfvars
          terraform apply -var-file=terraform.tfvars -auto-approve
          # terraform destroy -var-file=terraform.tfvars -auto-approve

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          pwd
          docker build -t flask-app:cicd ./Api-Flask
          docker images
          docker tag flask-app:cicd ${{ env.EKS_REPO }}:cicd
          docker push ${{ env.EKS_REPO }}:cicd

      - name: Configure kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name my-eks-cluster

      - name: Deploy to EKS Cluster
        run: |
          kubectl apply -f ./Api-Flask/deployment.yaml
          kubectl apply -f ./Api-Flask/service.yaml
          kubectl get deployment
          kubectl get pods
          kubectl get svc -o wide
